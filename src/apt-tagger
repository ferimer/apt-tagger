#!/bin/bash

# apt-tagger - A tool to tag your installed debian packages
# (c) Ferimer, 2013 - All rights reserved
# License: GNU Affero V3 (see LICENSE file)
# Fernando Rodríguez Sela <opensource at ferimer dot es> - ferimer.es

APTTAGGERFOLDER="/var/lib/apt/tagger"
DEBPACKAGESSUBFOLDER="tags"
SOURCESLISTFILENAME="apttagger.list"
DEFAULTADMINISTRATORNAME="`hostname` Administrator"
DEFAULTREPOSITORYFOLDER="/var/cache/apt/tagger"

# Initialize the apt-tagger environment
function apt_tagger_init {
  check_root
  check_folders
  apt_tagger_load_setup
}

function apt_tagger_setup {
  echo "# This file is autogenerated. Don't touch it until you know exactly what are you doing !" > $APTTAGGERFOLDER/.config
  read -p "Administrator name (used as Maintainer in generated metapackages) [$DEFAULTADMINISTRATORNAME]: " ADMINNAME
  if [ -z $ADMINNAME ]; then
    ADMINNAME=$DEFAULTADMINISTRATORNAME
  fi
  echo ADMINNAME="\"$ADMINNAME\"" >> $APTTAGGERFOLDER/.config

  read -p "Local repository folder [$DEFAULTREPOSITORYFOLDER]" REPOSITORYFOLDER
  if [ -z $REPOSITORYFOLDER ]; then
    REPOSITORYFOLDER=$DEFAULTREPOSITORYFOLDER
  fi
  mkdir -p $REPOSITORYFOLDER/$DEBPACKAGESSUBFOLDER
  echo REPOSITORYFOLDER="\"$REPOSITORYFOLDER\"" >> $APTTAGGERFOLDER/.config
  echo "# APT-TAGGER - This file is autogenerated. Don't modify it. Use 'apt-tagger setup' command instead" > /etc/apt/sources.list.d/$SOURCESLISTFILENAME
  echo "deb file:$REPOSITORYFOLDER $DEBPACKAGESSUBFOLDER/" >> /etc/apt/sources.list.d/$SOURCESLISTFILENAME
  echo "Thank you $ADMINNAME, the apt tagger is initialized!"
}

function apt_tagger_load_setup {
  source $APTTAGGERFOLDER/.config
}

# Auxiliar methods
function check_root {
  if [ `id -u` -ne 0 ]; then
    echo "Run me as root!"
    exit -1
  fi
}

function check_folders {
  if [ ! -d $APTTAGGERFOLDER ]; then
    echo "Not found $APTTAGGERFOLDER, is the first time you run this?"
    mkdir -p $APTTAGGERFOLDER
    touch $APTTAGGERFOLDER/.config
    apt_tagger_setup
  fi
}

# Load or create a package
function apt_tagger_load_package() {
  echo "Checking package $1"
  PACKAGE_PATH="$APTTAGGERFOLDER/$1"
  if [ ! -d $PACKAGE_PATH ]; then
    echo "Creating new package"
    mkdir -p "$PACKAGE_PATH/DEBIAN"
    read -p "Description: " PKGDESCRIPTION
    generate_debian_package_skel "$PACKAGE_PATH/DEBIAN/control" $PKGDESCRIPTION
  fi
}

# Generate a DEB package
function apt_tagger_generate_package() {
  echo "Generating package $1.deb..."
  PACKAGE_PATH="$APTTAGGERFOLDER/$1"
  DESTINATION_PATH="$REPOSITORYFOLDER/$DEBPACKAGESSUBFOLDER"
  dpkg -b $PACKAGE_PATH $DESTINATION_PATH/$1"-$(date +%Y%m%d).deb"
  echo "Updating repository contents..."
  cd $REPOSITORYFOLDER
  dpkg-scanpackages $DEBPACKAGESSUBFOLDER /dev/null | gzip -9c > $DEBPACKAGESSUBFOLDER/Packages.gz
  cd -
}

# Update repository and install meta-package
function apt_tagger_install_package() {
  echo "Updating repository..."
  aptitude update > /dev/null 2> /dev/null
  echo "Installing $1"
  aptitude install $1
}

# Create skeleton
function generate_debian_package_skel {
  cat > $1 << EOF
Package: $TAGNAME
Version: 0.0.1
Section: main
Priority: optional
Architecture: all
Depends: 
Recommends: 
Maintainer: $ADMINNAME
Description: $PKGDESCRIPTION
 $PKGDESCRIPTION
 .
 Package created by apt-tagger at `date`
EOF
}

# Help method
function help() {
  echo "TODO: HELP"
}

# Main method
function main() {
  if [ "$ADDPKG" -o "$DELPKG" ]; then
    if [ -z "$TAGNAME" ]; then
      echo "You're trying to add/remove packages but you didn't tell me the tag name to use (-t)"
      help
      exit -2
    fi
    apt_tagger_init
    apt_tagger_load_package $TAGNAME
    if [ "$ADDPKG" ]; then
      ADDPKG=${ADDPKG:2}
      sed -i '/Depends/s/$/, '"$ADDPKG"'/;s/: , /: /' "$PACKAGE_PATH/DEBIAN/control"
    fi
    if [ "$DELPKG" ]; then
      for PACKAGE_TO_REMOVE in $DELPKG; do
        sed -i '/Depends/s/'$PACKAGE_TO_REMOVE'//;s/: , /: /;s/, , /, /;s/, $//' "$PACKAGE_PATH/DEBIAN/control"
      done
    fi

    apt_tagger_generate_package $TAGNAME
    apt_tagger_install_package $TAGNAME
  fi
}

# Reading parameters
while [ $# -ne 0 ]; do
  case "$1" in
    -i) ;&
    --init)
      apt_tagger_init
      ;;

    -s) ;&
    --setup)
      apt_tagger_init
      apt_tagger_setup
      ;;

    -c) ;&
    --clean)
      read -p "Are you sure to purge all APTTAGGER data? (Yes|[No]): " PURGEALLDATA
      if [ ! -z $PURGEALLDATA ] && [ $PURGEALLDATA = "Yes" ]; then
        apt_tagger_init
        rm /etc/apt/sources.list.d/$SOURCESLISTFILENAME
        rm -rf $REPOSITORYFOLDER
        rm -rf $APTTAGGERFOLDER
      fi
      ;;

    --list)
      echo "List of packages:"
      ls -l $APTTAGGERFOLDER
      ;;

    --edit)
      if [ ! $2 ]; then
        echo "You should indicate a package name"
        exit -3
      fi
      if [ ! -f $APTTAGGERFOLDER/$2/DEBIAN/control ]; then
        echo "Package control file not found !"
        exit -4
      fi
      "${EDITOR:-vi}" $APTTAGGERFOLDER/$2/DEBIAN/control
      exit 0
      ;;

    -a) ;&
    --add)
      echo "Adding list of packages..."
      while [ $2 ] && [ ${2:0:1} != "-" ]; do
        ADDPKG="$ADDPKG, $2"
        shift
      done
      echo " => $ADDPKG"
      ;;

    -d) ;&
    --del)
      echo "Removing packages..."
      while [ $2 ] && [ ${2:0:1} != "-" ]; do
        DELPKG=" $DELPKG $2"
        shift
      done
      DELPKG=${DELPKG:2}
      echo " => $DELPKG"
      ;;

    -t) ;&
    --tag)
      echo "Setting tag name..."
      if [ ! $2 ]; then
        echo "You should indicate a package name"
        exit -3
      fi
      TAGNAME=$2
      shift
      echo " => $TAGNAME"
      ;;

    --about)
      echo "apt-tagger - A tool to tag your installed debian packages"
      echo "(c) 2013 by Fernando Rodríguez Sela, Ferimer"
      echo "ferimer.es"
      exit 1
      ;;

    --purge)
      if [ ! $2 ]; then
        echo "You should indicate a package name"
        exit -3
      fi
      read -p "Are you sure you want to purge $2? (Yes|[No]): " PURGEPACKAGE
      if [ ! -z $PURGEPACKAGE ] && [ $PURGEPACKAGE = "Yes" ]; then
        if [ ! -d $APTTAGGERFOLDER/$2 ]; then
          echo "Package $2 not found !"
          exit -4
        fi
        rm -rf $APTTAGGERFOLDER/$2
        rm $REPOSITORYFOLDER/$DEBPACKAGESSUBFOLDER/$2-*.deb
        read -p "Do you want to also purge $2 from the system? (Yes|[No]): " PURGEPACKAGE
        if [ ! -z $PURGEPACKAGE ] && [ $PURGEPACKAGE = "Yes" ]; then
          aptitude purge $2
        fi
      fi
      exit 0
      ;;

    -h) ;&
    --help)
      help
      exit 1
      ;;

    *)
      if [ ${1:0:1} = "-" ]; then
        echo "Parameter $1 not recognized !"
        help
        exit -2
      fi
      # By default, we consider packages to add
      ADDPKG="$ADDPKG, $1"
      ;;
  esac

  shift
done;

main
